'use client';
'use strict';

var React = require('react');
var recharts = require('recharts');
var core = require('@mantine/core');
require('../AreaChart/AreaChart.cjs');
var AreaGradient = require('../AreaChart/AreaGradient.cjs');

const classes = {};
const defaultProps = {
  withGradient: true,
  fillOpacity: 0.6,
  strokeWidth: 2,
  curveType: "linear"
};
const varsResolver = core.createVarsResolver((theme, { color }) => ({
  root: {
    "--chart-color": color ? core.getThemeColor(color, theme) : void 0
  }
}));
const Sparkline = core.factory((_props, ref) => {
  const props = core.useProps("Sparkline", defaultProps, _props);
  const {
    classNames,
    className,
    style,
    styles,
    unstyled,
    vars,
    data,
    withGradient,
    fillOpacity,
    curveType,
    strokeWidth,
    ...others
  } = props;
  const getStyles = core.useStyles({
    name: "Sparkline",
    classes,
    props,
    className,
    style,
    classNames,
    styles,
    unstyled,
    vars,
    varsResolver
  });
  const id = React.useId();
  const mappedData = React.useMemo(() => data.map((value, index) => ({ value, index })), [data]);
  return /* @__PURE__ */ React.createElement(core.Box, { ref, ...getStyles("root"), ...others, dir: "ltr" }, /* @__PURE__ */ React.createElement(recharts.ResponsiveContainer, null, /* @__PURE__ */ React.createElement(recharts.AreaChart, { data: mappedData }, /* @__PURE__ */ React.createElement(
    recharts.Area,
    {
      dataKey: "value",
      type: curveType,
      fill: `url(#${id})`,
      stroke: "var(--chart-color, var(--mantine-color-blue-filled))",
      isAnimationActive: false,
      connectNulls: true,
      strokeWidth,
      fillOpacity: 1
    }
  ), /* @__PURE__ */ React.createElement("defs", null, /* @__PURE__ */ React.createElement(
    AreaGradient.AreaGradient,
    {
      id,
      color: "var(--chart-color, var(--mantine-color-blue-filled))",
      fillOpacity,
      withGradient
    }
  )))));
});
Sparkline.displayName = "@mantine/charts/Sparkline";
Sparkline.classes = classes;

exports.Sparkline = Sparkline;
//# sourceMappingURL=Sparkline.cjs.map
